package main

import (
"net/http"
"fmt"
)
var js = `{"definitions":{"fights":{"properties":{"id":{"format":"uint32","type":"integer"},"monstercurrenthp":{"format":"int32","type":"integer"},"monsterid":{"format":"uint32","type":"integer"},"usercurrenthp":{"format":"int32","type":"integer"},"userid":{"format":"uint32","type":"integer"}}},"monsters":{"properties":{"accuracy":{"format":"float","type":"number"},"damagehigh":{"format":"int32","type":"integer"},"damagelow":{"format":"int32","type":"integer"},"dodge":{"format":"float","type":"number"},"experiencepoints":{"format":"int32","type":"integer"},"hp":{"format":"int32","type":"integer"},"id":{"format":"uint32","type":"integer"},"monsterlevel":{"format":"int32","type":"integer"},"url":{"format":"","type":"string"}}},"products":{"properties":{"available":{"format":"byte","type":"string"},"id":{"format":"uint32","type":"integer"},"name":{"format":"","type":"string"},"price":{"format":"float","type":"number"},"tokens":{"format":"int32","type":"integer"}}},"users":{"properties":{"createdon":{"format":"date-time","type":"string"},"email":{"format":"","type":"string"},"experiencelevel":{"format":"int32","type":"integer"},"experiencepoints":{"format":"int32","type":"integer"},"hp":{"format":"int32","type":"integer"},"id":{"format":"uint32","type":"integer"},"password":{"format":"password","type":"string"},"unicorns":{"format":"int32","type":"integer"}}}},"info":{"description":"Automatic api for the weakgame-api database","title":"weakgame-api Autoapi","version":"1.0.0"},"paths":{"/fight":{"get":{"produces":["application/json"],"responses":{"200":{"schema":{"$ref":"#/definitions/Fight"},"type":"array"},"400":{"description":"Empty collection"}}},"post":{"consumes":["application/json"],"parameters":[{"in":"body","name":"body","required":"true","schema":{"$ref":"#/definitions/Fight"}}],"produces":["application/json"],"responses":{"405":{"description":"Invalid input"}}}},"/fight/{id}":{"delete":{"consumes":["application/json"],"parameters":[{"format":"uint32","in":"path","name":"id","required":"true","type":"integer"}],"produces":["application/json"],"responses":{"404":{"description":"Not Found"}}},"get":{"parameters":[{"format":"uint32","in":"path","name":"id","required":"true","type":"integer"}],"produces":["application/json"],"responses":{"200":{"$ref":"#/definitions/Fight"},"404":{"description":"Not Found"}}},"put":{"consumes":["application/json"],"parameters":[{"format":"uint32","in":"path","name":"id","required":"true","type":"integer"},{"in":"body","name":"body","required":"true","schema":{"$ref":"#/definitions/Fight"}}],"produces":["application/json"],"responses":{"404":{"description":"Not Found"},"405":{"description":"Invalid input"}}}},"/monster":{"get":{"produces":["application/json"],"responses":{"200":{"schema":{"$ref":"#/definitions/Monster"},"type":"array"},"400":{"description":"Empty collection"}}},"post":{"consumes":["application/json"],"parameters":[{"in":"body","name":"body","required":"true","schema":{"$ref":"#/definitions/Monster"}}],"produces":["application/json"],"responses":{"405":{"description":"Invalid input"}}}},"/monster/{id}":{"delete":{"consumes":["application/json"],"parameters":[{"format":"uint32","in":"path","name":"id","required":"true","type":"integer"}],"produces":["application/json"],"responses":{"404":{"description":"Not Found"}}},"get":{"parameters":[{"format":"uint32","in":"path","name":"id","required":"true","type":"integer"}],"produces":["application/json"],"responses":{"200":{"$ref":"#/definitions/Monster"},"404":{"description":"Not Found"}}},"put":{"consumes":["application/json"],"parameters":[{"format":"uint32","in":"path","name":"id","required":"true","type":"integer"},{"in":"body","name":"body","required":"true","schema":{"$ref":"#/definitions/Monster"}}],"produces":["application/json"],"responses":{"404":{"description":"Not Found"},"405":{"description":"Invalid input"}}}},"/product":{"get":{"produces":["application/json"],"responses":{"200":{"schema":{"$ref":"#/definitions/Product"},"type":"array"},"400":{"description":"Empty collection"}}},"post":{"consumes":["application/json"],"parameters":[{"in":"body","name":"body","required":"true","schema":{"$ref":"#/definitions/Product"}}],"produces":["application/json"],"responses":{"405":{"description":"Invalid input"}}}},"/product/{id}":{"delete":{"consumes":["application/json"],"parameters":[{"format":"uint32","in":"path","name":"id","required":"true","type":"integer"}],"produces":["application/json"],"responses":{"404":{"description":"Not Found"}}},"get":{"parameters":[{"format":"uint32","in":"path","name":"id","required":"true","type":"integer"}],"produces":["application/json"],"responses":{"200":{"$ref":"#/definitions/Product"},"404":{"description":"Not Found"}}},"put":{"consumes":["application/json"],"parameters":[{"format":"uint32","in":"path","name":"id","required":"true","type":"integer"},{"in":"body","name":"body","required":"true","schema":{"$ref":"#/definitions/Product"}}],"produces":["application/json"],"responses":{"404":{"description":"Not Found"},"405":{"description":"Invalid input"}}}},"/user":{"get":{"produces":["application/json"],"responses":{"200":{"schema":{"$ref":"#/definitions/User"},"type":"array"},"400":{"description":"Empty collection"}}},"post":{"consumes":["application/json"],"parameters":[{"in":"body","name":"body","required":"true","schema":{"$ref":"#/definitions/User"}}],"produces":["application/json"],"responses":{"405":{"description":"Invalid input"}}}},"/user/{id}":{"delete":{"consumes":["application/json"],"parameters":[{"format":"uint32","in":"path","name":"id","required":"true","type":"integer"}],"produces":["application/json"],"responses":{"404":{"description":"Not Found"}}},"get":{"parameters":[{"format":"uint32","in":"path","name":"id","required":"true","type":"integer"}],"produces":["application/json"],"responses":{"200":{"$ref":"#/definitions/User"},"404":{"description":"Not Found"}}},"put":{"consumes":["application/json"],"parameters":[{"format":"uint32","in":"path","name":"id","required":"true","type":"integer"},{"in":"body","name":"body","required":"true","schema":{"$ref":"#/definitions/User"}}],"produces":["application/json"],"responses":{"404":{"description":"Not Found"},"405":{"description":"Invalid input"}}}}},"swagger":"2.0"}`

func swaggerresponse(res http.ResponseWriter, req *http.Request){
fmt.Fprint(res, js)
}